.grid{
    display: grid;
    /*Si quiero dividir en fracciones iguales los elementos puedo usar 1fr*/
    /*Pero si quisiera agregar muchas columnas puede no ser tan eficiente*/
    /* grid-template-columns: 1fr 1fr 1fr 1fr; */
    /*Entonces pudo agregar la funcion repeat(las veces que se repetira, la medida)*/
    grid-template-columns: repeat(3, 1fr);
    
    grid-auto-rows: minmax(100px, auto);/*indico que todas las filas tendrán un espacio mínimo de 100px y se ajustarán si tienen más contenido*/
    gap: 1em; 

    /*Esta propiedad es para alinear de manera horizontal el elemento en su espacio delimitado*/
    justify-items: stretch;
    /*stretch: Por defecto los elementos abarcan todo el espacio que tienen disponible*/
    /*start-center-end: los elementos se colocarán al principio, centro o final de manera horizontal,
      pero si se les agrega más contenido comenzarán a tomar más espacio
      hasta llegar al máximo permitido*/

    /*Esta propiedad es para alinear de manera vertical el elemento en su espacio delimitado*/
    align-items: stretch;/*start-center-end por default: stretch*/
    /*Esta propieadad se comporta igual que la anterior pero de manera vertical*/

}   
/*justify-items y align-items, son propiedades que organizan los elementos que están anidados dentro de otro que los contiene*/

/*De forma horizontal*/
/*Si tengo 1 elemento en la primera fila tengo una línea al principio y otra al final*/
/*Si tengo 2 elementos en la primera fila tengo una línea al principio, otra entre el primero y el segundo y otra al final del segundo*/
/*Si tengo 3 elementos en la primera fila tengo una línea al principio, otra entre el primero y el segundo, otra entre el segundo y el tercero, y otra al final del tercero*/
/*Bajo este principio puedo utilizar la propiedad:  grid-column para horizontal y grid-row para vertical*/

.element1{
    grid-column: 1/3; /*el primer número indica la línea en la que empieza y el segundo 
    la línea en la que termina*/
}

.element2{
    grid-column: 3/4;/*Aquí complemento el espacio donde terminó el anterior*/
}

.element3{
    grid-column: 1/4; /*Abarca desde la línea 1 a la 4, o sea toda la fila*/
}


.element4{
    grid-column: 1/3;/*Si este abarca 2 espacios*/
}

.element5{
    grid-column: 2/4;/*Y este también 2 espacios, se va a recorrer a la siguiente fila, pero a partir
     desde la linea 2*/
}

.element6{
    grid-row: 5/7; /*Estoy haciendo que continue donde las demás filas le dejaron espacio,
     o sesa la línea 5 y le estoy diciendo que tome 2 espacios*/
}

/*Solo los div que tengan la clase grid aplica estos estilos*/
.grid > div {
    background: #ecf0f1;
    padding: 1em;
}

